//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\projects\Viewer\Viewer\Query\Query.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Viewer.Query {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="QueryParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IQueryVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] QueryParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSource([NotNull] QueryParser.SourceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.optionalWhere"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalWhere([NotNull] QueryParser.OptionalWhereContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.optionalOrderBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalOrderBy([NotNull] QueryParser.OptionalOrderByContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.orderByList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrderByList([NotNull] QueryParser.OrderByListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.orderByKey"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrderByKey([NotNull] QueryParser.OrderByKeyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.optionalDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionalDirection([NotNull] QueryParser.OptionalDirectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] QueryParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] QueryParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.multiplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplication([NotNull] QueryParser.MultiplicationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] QueryParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] QueryParser.ArgumentListContext context);
}
} // namespace Viewer.Query
